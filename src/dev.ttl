@prefix hmas: <https://purl.org/hmas/> .
@prefix hmas-dev: <https://purl.org/hmas/dev#> .
@prefix fipa: <https://purl.org/hmas/> .

@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix td: <https://www.w3.org/2019/wot/td#> .
@prefix hctl: <https://www.w3.org/2019/wot/hypermedia#> .
@prefix htv: <http://www.w3.org/2011/http#> .


#######################
# Developer constants #
#######################

hmas-dev:PathToBaseURI a rdf:List ;
    rdf:first prov:used ;
    rdf:rest ( td:baseURI ) .

hmas-dev:null a xsd:simpleType ;
   dct:comment "The null type"@en .

hmas-dev:nullValue a hmas-dev:null .

hmas-dev:forApplicatonJson a sh:PropertyShape ;
    sh:path hctl:forContentType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue "application/json" .

hmas-dev:forTextTurtle a sh:PropertyShape ;
    sh:path hctl:forContentType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue "text/turtle" .

hmas-dev:FipaMessagingProtocol a sh:PropertyShape ;
    sh:path hctl:forSubprotocol ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue "fipa.mts.mtp.http.std" .

hmas-dev:GetMethod a sh:PropertyShape ;
    sh:path htv:methodName ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue "GET" .

hmas-dev:PutMethod a sh:PropertyShape ;
    sh:path htv:methodName ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue "PUT" .

hmas-dev:PostMethod a sh:PropertyShape ;
    sh:path htv:methodName ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue "POST" .

hmas-dev:DeleteMethod a sh:PropertyShape ;
    sh:path htv:methodName ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue "DELETE" .

hmas-dev:InvokeAction a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:invokeAction .

hmas-dev:ReadProperty a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:readProperty .

hmas-dev:WriteProperty a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:writeProperty .

hmas-dev:ObserveProperty a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:observeProperty .

hmas-dev:UnobserveProperty a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:unobserveProperty .

hmas-dev:QueryAction a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:queryAction .

hmas-dev:CancelAction a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:cancelAction .

hmas-dev:SubscribeEvent a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:subscribeEvent .

hmas-dev:UnsubscribeEvent a sh:PropertyShape ;
    sh:path hctl:hasOperationType ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:hasValue td:unsubscribeEvent .

hmas-dev:AuthorizationHeader a sh:NodeShape ;
    sh:class hmas:ActionExecution ;
    sh:property [
        sh:path (
            prov:used
            htv:headers
            [sh:zeroOrMorePath rdf:rest]
            rdf:first
        ) ;
        sh:minQualifiedShape 1 ;
        sh:maxQualifiedShape 1 ;
        sh:qualifiedValueShape [
            sh:class htv:messageHeader ;
            sh:property [
                sh:path htv:fieldName ;
                sh:minCount 1 ;
                sh:maxCount 1 ;
                sh:hasValue "Authorization"
            ] , [
                sh:path htv:fieldValue ;
                sh:minCount 1 ;
                sh:maxCount 1 ;
                sh:datatype xsd:string
            ]
        ]
    ] .

hmas-dev:SlugHeader a sh:NodeShape ;
    sh:class hmas:ActionExecution ;
    sh:property [
        sh:path (
            htv:headers
            [sh:zeroOrMorePath rdf:rest]
            rdf:first
        ) ;
        sh:minQualifiedShape 1 ;
        sh:maxQualifiedShape 1 ;
        sh:qualifiedValueShape [
            sh:class htv:messageHeader ;
            sh:property [
                sh:path htv:fieldName ;
                sh:minCount 1 ;
                sh:maxCount 1 ;
                sh:hasValue "Slug"
            ] , [
                sh:path htv:fieldValue ;
                sh:minCount 1 ;
                sh:maxCount 1 ;
                sh:datatype xsd:string
            ]
        ]
    ] .

hmas-dev:XAgentWebIDHeader a sh:NodeShape ;
    sh:class hmas:ActionExecution ;
    sh:property [
        sh:path (
            htv:headers
            [sh:zeroOrMorePath rdf:rest]
            rdf:first
        ) ;
        sh:minQualifiedShape 1 ;
        sh:maxQualifiedShape 1 ;
        sh:qualifiedValueShape [
            sh:class htv:messageHeader ;
            sh:property [
                sh:path htv:fieldName ;
                sh:minCount 1 ;
                sh:maxCount 1 ;
                sh:hasValue "X-Agent-WebID"
            ] , [
                sh:path htv:fieldValue ;
                sh:minCount 1 ;
                sh:maxCount 1 ;
                sh:datatype xsd:string
            ]
        ]
    ] .
# Messaging #

hmas-dev:FIPAMessageForm a sh:NodeShape ;
    sh:class hctl:Form ;
    sh:property hmas-dev:FipaMessagingProtocol, hmas-dev:InvokeAction, [
        sh:path hctl:hasTarget ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:hasValue ""
    ] .

hmas-dev:AgentMessage a sh:PropertyShape ;
    sh:path fipa:hasSender ; # specifies that the sender should be an agent
    sh:class hmas:Agent;
    sh:minCount 1;
    sh:maxCount 1 .

hmas-dev:Request a sh:PropertyShape ;
    sh:path fipa:hasPerformative ; # specifies that the performative should be fipa:agree
    sh:hasValue fipa:request ;
    sh:minCount 1 ;
    sh:maxCount 1 .

hmas-dev:Agree a sh:PropertyShape ;
    sh:path fipa:hasPerformative ; # specifies that the performative should be fipa:agree
    sh:hasValue fipa:agree ;
    sh:minCount 1 ;
    sh:maxCount 1 .

hmas-dev:Refuse a sh:PropertyShape ;
    sh:path fipa:hasPerformative ;
    sh:hasValue fipa:refuse ;
    sh:minCount 1 ;
    sh:maxCount 1 .

hmas-dev:Failure a sh:PropertyShape ;
    sh:path fipa:hasPerformative ;
    sh:hasValue fipa:failure ;
    sh:minCount 1 ;
    sh:maxCount 1 .

hmas-dev:InformDone a sh:PropertyShape ;
    sh:path fipa:informDone ;
    sh:hasValue fipa:informDone ;
    sh:minCount 1 ;
    sh:maxCount 1 .

hmas-dev:InformResult a sh:PropertyShape ;
    sh:path fipa:informDone ;
    sh:hasValue fipa:informResult ;
    sh:minCount 1 ;
    sh:maxCount 1 .

hmas-dev:InteractionOrder a sh:PropertyShape ;
    sh:path fipa:hasContent ; # specifies that the content should be an action execution specification
    sh:minQualifiedShape 1 ;
    sh:maxQualifiedShape 1 ;
    sh:qualifiedValueShape [ sh:class hmas:ActionExecution ] .

hmas-dev:FIPASL a sh:PropertyShape ;
    sh:path fipa:hasLanguage ;
    sh:hasValue fipa:FIPASL ; # specifies that the content should be expressed in the FIPA SL Content Language
    sh:minCount 1 ;
    sh:maxCount 1 .

:WorkspaceProfileSpecification a sh:NodeShape ;
    sh:class :ResourceProfile ;
    sh:property [ 
        sh:path :isProfileOf ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype :Workspace   
    ] .

:ArtifactProfileSpecification a sh:NodeShape ;
    sh:class :ResourceProfile ;
    sh:property [ 
        sh:path :isProfileOf ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype :Artifact
    ] .
    
